<?php
declare(strict_types=1);

/**
 * @author Patrick Greyson
 *
 * Postmag - Postfix mail alias generator for Nextcloud
 * Copyright (C) 2021
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace OCA\Postmag\Service;

use OCA\Postmag\Db\AliasMapper;

class CommandService {
    
    private $mapper;
    private $aliasService;
    private $userService;
    
    public function __construct(AliasMapper $mapper, AliasService $aliasService, UserService $userService) {
        $this->mapper = $mapper;
        $this->aliasService = $aliasService;
        $this->userService = $userService;
    }
    
    public function formatPostfixAliasFile(): iterable {
        $aliases = $this->mapper->findAll(null, null, null);
        
        // add comments
        $ret[] = "######################";
        $ret[] = "# Postmag Alias File #";
        $ret[] = "######################";
        $ret[] = "";
        $ret[] = "# This file was autogenerated by Postmag for Nextcloud.";
        $ret[] = "# https://github.com/patrick1990/postmag-nc";
        $ret[] = "";
        
        // add aliases
        foreach ($aliases as $alias) {
            // Add created and last modified time stamp
            $ret[] = "# Created: "
                        .strval($alias->getCreated())
                        .", Modified: "
                        .strval($alias->getLastModified());
            
            // Add alias
            $ret[] = ($alias->getEnabled() ? "" : "# ")
                        .$alias->getAliasName()
                        ."."
                        .$alias->getAliasId()
                        ."."
                        .$this->userService->getUserAliasId($alias->getUserId())
                        .": "
                        .$alias->getToMail();
        }
        
        return $ret;
    }
    
    public function getLastModified(bool $formatted = false): string {
        $lastModified = $this->aliasService->getLastModified();
        
        if ($formatted) {
            return (new \DateTime())->setTimestamp(intval($lastModified))->format('Y-m-d_H:i:s');
        }
        
        return $lastModified;
    }
    
}